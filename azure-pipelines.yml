# azure-pipelines.yml
trigger:
  branches:
    include:
      - main
      - lab/**

variables:
  imageName: jrebaza01/myapp       # Nombre de tu imagen en Docker Hub
  dockerUsername: $(dockerUsername) # Variable secreta definida en Library
  dockerPassword: $(dockerPassword) # Variable secreta definida en Library

jobs:
- job: BuildAndPush
  displayName: Build and Push Docker Image
  pool:
    name: Default                  # Tu agente local
  steps:

  # 1️⃣ Checkout del repo
  - checkout: self

  # 2️⃣ Login en Docker Hub
  - script: |
      echo Logging in to Docker Hub
      docker login -u %dockerUsername% -p %dockerPassword%
    displayName: Docker Login
    env:
      dockerUsername: $(dockerUsername)
      dockerPassword: $(dockerPassword)

  # 3️⃣ Build y Push Docker
  - script: |
      echo Building Docker image
      docker build -t %imageName%:%Build.BuildId% ./app
      echo Pushing Docker image
      docker push %imageName%:%Build.BuildId%
    displayName: Build and Push Docker Image
    env:
      imageName: $(imageName)

  # 4️⃣ Actualizar Helm values.yaml
  - powershell: |
      (Get-Content ./charts/app/values.yaml) -replace 'tag: .*', 'tag: $(Build.BuildId)' | Set-Content ./charts/app/values.yaml
    displayName: Update Helm values.yaml

  # 5️⃣ Commit y Push para ArgoCD
  - powershell: |
      git config user.name "azure-pipelines[bot]"
      git config user.email "azure-pipelines[bot]@users.noreply.github.com"
      git add ./charts/app/values.yaml
      git commit -m "Update image tag to $(Build.BuildId)"
      git push origin main
    displayName: Commit updated Helm values.yaml
