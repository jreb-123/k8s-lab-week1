trigger:
- main
- lab/**

variables:
  - group: docker-credentials   # Tu variable group con dockerUsername y dockerPassword

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: BuildAndPushJob
    displayName: Build & Push Docker Image
    pool:
      name: Default   # Tu agente local
    steps:

    # 1. Checkout repo
    - checkout: self

    # 2. Log in to Docker Hub (PowerShell para manejar caracteres especiales en PAT)
    - powershell: |
        Write-Host "Logging in to Docker Hub..."
        $password = "$(dockerPassword)"
        $password | docker login -u "$(dockerUsername)" --password-stdin
      displayName: Docker Login

    # 3. Set dynamic image tag
    - powershell: |
        $tag = "$(Build.SourceVersion.Substring(0,7))"
        Write-Host "##vso[task.setvariable variable=TAG]$tag"
      displayName: Set Image Tag

    # 4. Build and push Docker image
    - powershell: |
        $imageName = "$(dockerUsername)/app-week1"
        Write-Host "Building Docker image $imageName:$(TAG)"
        docker build -t $imageName:$(TAG) ./app
        docker push $imageName:$(TAG)
      displayName: Build & Push Docker Image

    # 5. Update Helm values.yaml
    - powershell: |
        $imageName = "$(dockerUsername)/app-week1"
        $tag = "$(TAG)"
        (Get-Content ./charts/app/values.yaml) `
            -replace 'repository:.*', "repository: $imageName" `
            -replace 'tag:.*', "tag: $tag" | Set-Content ./charts/app/values.yaml
      displayName: Update Helm values.yaml

    # 6. Commit & push updated values.yaml
    - powershell: |
        git config user.name "azure-pipelines"
        git config user.email "azure-pipelines@users.noreply.github.com"
        git add ./charts/app/values.yaml
        git commit -m "Update image tag to $(TAG)" || Write-Host "No changes to commit"
        git push origin HEAD:main
      displayName: Commit & Push Helm values
