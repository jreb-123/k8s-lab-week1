trigger:
  branches:
    include:
      - dev
      - main

pool:
  name: default  # agente Ubuntu

variables:
  imageName: 'jrebaza01/app-week1'
  # tag se define autom√°ticamente por Build.SourceVersion

steps:

# 1Ô∏è‚É£ Set dynamic releaseName and namespace based on branch
- script: |
    if [ "$(Build.SourceBranchName)" == "dev" ]; then
      echo "##vso[task.setvariable variable=releaseName]app-dev"
      echo "##vso[task.setvariable variable=namespace]dev"
    else
      echo "##vso[task.setvariable variable=releaseName]app-prod"
      echo "##vso[task.setvariable variable=namespace]prod"
    fi
  displayName: 'Set releaseName and namespace dynamically'

# 2Ô∏è‚É£ Debug variables
- script: |
    echo "releaseName=$(releaseName)"
    echo "namespace=$(namespace)"
  displayName: 'Debug variables'

# 3Ô∏è‚É£ Checkout repository usando PAT
- checkout: self
  persistCredentials: true
  displayName: 'Checkout repository using PAT'

# 4Ô∏è‚É£ Update Helm values.yaml
- bash: |
    echo "=== üîß Updating values.yaml for branch $(Build.SourceBranchName) ==="

    if [ "$(Build.SourceBranchName)" == "dev" ]; then
      envPath="envs/dev/values.yaml"
    else
      envPath="envs/prod/values.yaml"
    fi

    # Actualiza values.yaml (sin tag si quieres evitar problemas)
    sed -i "s|tag: .*|tag: latest|" $envPath || echo "No tag found, skipping"

    git config user.email "pipeline@azuredevops.local"
    git config user.name "Azure Pipelines"
    git add $envPath
    git commit -m "Update values.yaml for $(Build.SourceBranchName)" || echo "No changes to commit"

    # Push usando PAT
    git push origin HEAD:$(Build.SourceBranchName)
  displayName: 'Update Helm values.yaml and push to GitHub via PAT'

# 5Ô∏è‚É£ Build Docker image
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: build
    Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
    buildContext: '$(Build.SourcesDirectory)/app'
    tags: |
      $(imageName):$(Build.SourceVersion)

# 6Ô∏è‚É£ Push Docker image to Docker Hub
- task: Docker@2
  displayName: 'Push Docker image to Docker Hub'
  inputs:
    command: push
    tags: |
      $(imageName):$(Build.SourceVersion)

# 7Ô∏è‚É£ Debug variables before Helm
- script: |
    echo "releaseName=$(releaseName)"
    echo "namespace=$(namespace)"
  displayName: 'Debug variables before Helm'

# 8Ô∏è‚É£ Deploy to Kubernetes via Helm
- task: HelmDeploy@0
  displayName: 'Deploy to Kubernetes via Helm'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'aks-kubeconfig-connection'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'charts/app'
    releaseName: '$(releaseName)'
    namespace: '$(namespace)'
    overrideValues: 'image.repository=$(imageName),image.tag=latest'
    install: true
    waitForExecution: false
    arguments: '--create-namespace'


