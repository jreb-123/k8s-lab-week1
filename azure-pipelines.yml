trigger:
  branches:
    include:
      - dev
      - main

pool:
  name: default   # Tu agente en Ubuntu

variables:
  imageName: 'jrebaza01/app-week1'
  tag: $(Build.SourceVersion)

steps:
# 1️⃣ Definir variables dinámicas según rama
- script: |
    if [ "$(Build.SourceBranchName)" == "refs/heads/dev" ]; then
      echo "##vso[task.setvariable variable=releaseName]app-dev"
      echo "##vso[task.setvariable variable=namespace]dev"
    else
      echo "##vso[task.setvariable variable=releaseName]app-prod"
      echo "##vso[task.setvariable variable=namespace]prod"
    fi
  displayName: 'Set releaseName and namespace dynamically'

# 2️⃣ Build de la imagen Docker
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: build
    Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
    buildContext: '$(Build.SourcesDirectory)/app'
    tags: |
      $(imageName):$(tag)

# 3️⃣ Push a Docker Hub
- task: Docker@2
  displayName: 'Push Docker image to Docker Hub'
  inputs:
    command: push
    tags: |
      $(imageName):$(tag)

# 4️⃣ Actualiza el values.yaml del entorno correspondiente
- script: |
    echo "Updating values.yaml for branch $(Build.SourceBranchName) with tag $(tag)..."
    if [ "$(Build.SourceBranchName)" == "refs/heads/dev" ]; then
      envPath="envs/dev/values.yaml"
    else
      envPath="envs/prod/values.yaml"
    fi

    sed -i "s|tag: .*|tag: $(tag)|" $envPath

    git config user.email "pipeline@azuredevops.local"
    git config user.name "Azure Pipelines"
    git remote set-url origin https://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@github.com/jreb-123/k8s-lab-week1.git
    git add $envPath
    git commit -m "Update image tag to $(tag)" || echo "No changes to commit"
    git pull origin $(Build.SourceBranchName) --rebase
    git push origin HEAD:$(Build.SourceBranchName)
  displayName: 'Update Helm values.yaml and push to GitHub'
  env:
    GIT_TERMINAL_PROMPT: 1

# 5️⃣ Despliegue en Kubernetes con Helm
- task: HelmDeploy@0
  displayName: 'Deploy to Kubernetes via Helm'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'aks-kubeconfig-connection'  # <- Reemplaza con tu Service Connection
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'charts/app'
    releaseName: '$(releaseName)'
    namespace: '$(namespace)'
    overrideValues: 'image.repository=$(imageName),image.tag=$(tag)'
    install: true
    waitForExecution: true
    arguments: '--create-namespace'


