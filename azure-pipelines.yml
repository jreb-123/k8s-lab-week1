trigger:
  branches:
    include:
      - main
      - dev

pool:
  name: Default   # Tu agente local

variables:
  imageName: 'jrebaza01/app-week1'   # Tu repo en Docker Hub
  tag: $(Build.SourceVersion)
  releaseName: $[ eq(variables['Build.SourceBranchName'], 'refs/heads/dev') ? 'app-dev' : 'app-prod' ]
  namespace: $[ eq(variables['Build.SourceBranchName'], 'refs/heads/dev') ? 'dev' : 'prod' ]

steps:
# 1️⃣ Checkout del código
- checkout: self

# 2️⃣ Login en Docker Hub
- task: Docker@2
  displayName: 'Login to Docker Hub'
  inputs:
    command: login
    containerRegistry: 'DockerHubService'  # Tu conexión ya creada

# 3️⃣ Build de la imagen Docker
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: build
    Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
    buildContext: '$(Build.SourcesDirectory)/app'
    tags: |
      $(imageName):$(tag)

# 4️⃣ Push de la imagen a Docker Hub
- task: Docker@2
  displayName: 'Push Docker image'
  inputs:
    command: push
    containerRegistry: 'DockerHubService'
    tags: |
      $(imageName):$(tag)

# 5️⃣ Actualizar values.yaml con el nuevo tag
- powershell: |
    Write-Host "Actualizando values.yaml con el nuevo tag..."
    $valuesPath = "$(Build.SourcesDirectory)/envs/$env:BUILD_SOURCEBRANCHNAME/values.yaml"
    (Get-Content "$valuesPath") -replace 'tag: .*', "tag: $(tag)" | Set-Content "$valuesPath"

    git config user.email "ci@azurepipelines.com"
    git config user.name "Azure Pipelines"
    git add "$valuesPath"
    git commit -m "Update image tag to $(tag)" || Write-Host "No changes to commit"
    git push origin $env:BUILD_SOURCEBRANCHNAME
  displayName: "Update Helm values and push to GitHub"

# 6️⃣ Deploy con Helm
- task: HelmDeploy@0
  displayName: 'Deploy to Kubernetes'
  inputs:
    connectionType: 'None'
    kubernetesServiceEndpoint: ''
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Build.SourcesDirectory)/charts/app'
    releaseName: '$(releaseName)'
    namespace: '$(namespace)'
    valueFile: '$(Build.SourcesDirectory)/envs/$(Build.SourceBranchName)/values.yaml'
    overrideValues: |
      image.repository=$(imageName)
      image.tag=$(tag)
    install: true
    wait: true

