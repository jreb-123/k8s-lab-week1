trigger:
- dev

pool:
  name: 'ubuntu-pool'

variables:
  imageRepository: 'jrebaza01/app-week1'
  tag: 'latest'
  helmChartPath: 'charts/app'
  releaseName: 'app-dev'
  namespace: 'dev'

stages:
- stage: Build
  displayName: "Build & Push Docker Image"
  jobs:
  - job: Build
    displayName: "Build Docker Image"
    steps:
    - task: Docker@2
      displayName: "Build and Push Image to Docker Hub"
      inputs:
        command: 'buildAndPush'
        repository: '$(imageRepository)'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: 'dockerhub-connection'
        tags: |
          $(tag)

- stage: UpdateHelmValues
  displayName: "Update Helm values.yaml and Push to GitHub"
  jobs:
  - job: UpdateHelm
    displayName: "Update Helm values.yaml"
    steps:
    - script: |
        echo "=== ðŸ”§ Updating values.yaml for branch dev ==="
        sed -i "s|repository:.*|repository: $(imageRepository)|" $(Build.SourcesDirectory)/charts/app/values.yaml
        sed -i "s|tag:.*|tag: $(tag)|" $(Build.SourcesDirectory)/charts/app/values.yaml
        git config --global user.email "devops@azure.com"
        git config --global user.name "Azure DevOps"
        git add charts/app/values.yaml
        git commit -m "Update values.yaml for dev" || echo "No changes to commit"
        git push
      displayName: "Commit and Push values.yaml changes to GitHub"
      env:
        GITHUB_TOKEN: $(GITHUB_PAT)

- stage: Deploy
  displayName: "Deploy to AKS via Helm"
  jobs:
  - job: Deploy
    displayName: "Helm Deploy to AKS"
    steps:
    - task: HelmDeploy@0
      displayName: "Deploy to Kubernetes via Helm"
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: 'aks-kubeconfig-connection'
        namespace: '$(namespace)'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: '$(helmChartPath)'
        releaseName: '$(releaseName)'
        overrideValues: 'image.repository=$(imageRepository),image.tag=$(tag)'
        install: true
        waitForExecution: false

    - task: HelmDeploy@0
      displayName: "Check deployment status"
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: 'aks-kubeconfig-connection'
        namespace: '$(namespace)'
        command: 'status'
        releaseName: '$(releaseName)'

